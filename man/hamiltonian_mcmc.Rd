% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hmc.R
\name{hamiltonian_mcmc}
\alias{hamiltonian_mcmc}
\title{Sample using hamiltonian MCMC}
\usage{
hamiltonian_mcmc(
  initial_state,
  num_samples,
  step_size,
  num_steps,
  stan_file,
  stan_data,
  metric_method = "ccipca",
  metric = diag(length(initial_state)),
  adaptive_stepsize_target_acceptance = 0.65,
  returnleapfrogdetails = F,
  metric_adapter_settings = list(NA)
)
}
\arguments{
\item{initial_state}{A vector with length \eqn{d}, representing the initial state.}

\item{num_samples}{Number of samples to generate.}

\item{step_size}{How large is the step size in the leapfrof integration.}

\item{num_steps}{Number of leap frog steps. If Adaptive Mode is enabled, this represents the initial value.}

\item{stan_obj}{An object of class TargetDensity representing the target density to sample from.}

\item{auto_mass_matrix}{A boolean indicating wether the Mass matrix should be adjusted dynamically based on accepted posterior samples}

\item{n_mass_matrix_comp}{If the mass matrix is dynamically adapted, it is done so using a eigendecomposition. This parameter sets the number of components for the decomposition.}

\item{M}{The mass matrix for sampling momenta. Can be passed as either a full \eqn{d \times d} matrix or as a vector of length \eqn{d}, interpreted as the diagnoal of the mass matrix}

\item{adaptive_mode}{Boolean to indicate whether the step size should be dynamic based on a target acceptance rate. FALSE by default.}

\item{adaptive_target_acceptance}{If adaptive mode is enabled, this sets the target acceptance rate. Default = \eqn{0.85}}
}
\value{
A list of the following
\itemize{
  \item samples: A matrix of accepted samples. Each non accepted iteration will have NA entries.
  \item proposals: A matrix of all proposals, no matter if they were accepted or not. Used primarily for diagnostics.
  \item energy: A matrix with two columns. Column1 is the total hamiltonian for the state at each iteration, Column2 is the hamiltonian for the proposal generated in each iteration.
  \item metropolis_acceptance: A matrix with a single column, containing the metropolis acceptance (i.e. random $U(0,1)$) generated at each iteration.
}
}
\description{
Sample using hamiltonian MCMC
}
\examples{
library(hamiltonianmcmc)
library(torch)
library(MASS)

d = 3
rho <- runif(3)
sigma <- c(3, 2, 1)
df <- mvrnorm(100, rep(0, d), t(rho\%*\%diag(sigma))\%*\%t(rho))

tgt_dens <- hamiltonianmcmc::TargetDensity$new(data = torch_tensor(df),
                                               init_mu = rnorm(d),
                                               diag(d))

num_samples <- 1500
initial_state <- rnorm(d)
step_size <- 0.0005
num_steps <- 30

hmc_res <- hamiltonian_mcmc(initial_state = initial_state, num_samples = num_samples,
                            step_size = step_size, num_steps = num_steps,
                            tgt_density = tgt_dens, auto_mass_matrix = F,
                            n_mass_matrix_comp = 1, M=rep(0.01, d),
                            adaptive_mode = T, adaptive_target_acceptance = 0.8)

plot(hmc_res$samples[100:1500,])
}
